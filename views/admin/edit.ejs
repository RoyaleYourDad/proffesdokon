<%- include('../partials/header') %>
<div class="min-h-screen bg-gradient-to-b from-gray-50 to-white py-12">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-5xl">
    <h1 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-8 flex items-center">
      <svg class="w-6 h-6 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15.414a1 1 0 01-1.414 0l-3-3a1 1 0 011.414-1.414L9.586 13.586a2 2 0 002.828 0l4-4z" />
      </svg>
      <%= product ? 'Edit Product' : 'Add Product' %>
    </h1>
    <div class="bg-white shadow-xl rounded-2xl p-6 sm:p-8">
      <form action="<%= product ? '/admin/edit/' + product.id : '/admin/add' %>" method="POST" enctype="multipart/form-data" id="product-form">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <!-- Left Column: Basic Info -->
          <div class="space-y-6">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700">Product Name</label>
              <input type="text" name="name" id="name" value="<%= product ? product.name : '' %>"
                class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                required>
            </div>
            <div>
              <label for="category" class="block text-sm font-medium text-gray-700">Category</label>
              <div class="flex gap-2">
                <select name="category" id="category"
                  class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required>
                  <option value="">Select Category</option>
                  <% categories.forEach(category => { %>
                    <option value="<%= category %>" <%= product && product.category === category ? 'selected' : '' %>>
                      <%= category %>
                    </option>
                  <% }) %>
                </select>
              </div>
              <div class="mt-2">
                <label for="new-category" class="block text-sm font-medium text-gray-700">Add New Category</label>
                <div class="flex gap-2">
                  <input type="text" id="new-category" placeholder="New category..."
                    class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <button type="button" id="add-category-btn"
                    class="mt-1 bg-blue-600 text-white py-2 px-4 rounded-lg text-sm hover:bg-blue-700 transition-colors">
                    Add
                  </button>
                </div>
              </div>
            </div>
            <div>
              <label for="price" class="block text-sm font-medium text-gray-700">Price (USD)</label>
              <input type="number" name="price" id="price" step="0.01" value="<%= product ? product.price : '' %>"
                class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                required>
            </div>
            <div>
              <label for="stock" class="block text-sm font-medium text-gray-700">Stock Quantity</label>
              <input type="number" name="stock" id="stock" min="0" value="<%= product ? product.stock : '0' %>"
                class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                required>
            </div>
            <div>
              <label for="discountPrice" class="block text-sm font-medium text-gray-700">Discount Price (Optional)</label>
              <input type="number" name="discountPrice" id="discountPrice" step="0.01"
                value="<%= product && product.discountPrice ? product.discountPrice : '' %>"
                class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
            <div>
              <label for="discountExpiry" class="block text-sm font-medium text-gray-700">Discount Expiry (Optional)</label>
              <input type="date" name="discountExpiry" id="discountExpiry"
                value="<%= product && product.discountExpiry ? product.discountExpiry : '' %>"
                class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
            <div>
              <label for="origin" class="block text-sm font-medium text-gray-700">Origin (Optional)</label>
              <input type="text" name="origin" id="origin" value="<%= product && product.origin ? product.origin : '' %>"
                class="mt-1 w-full p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
            </div>
          </div>
          <!-- Right Column: Images -->
          <div class="space-y-6">
            <div>
              <label class="block text-sm font-medium text-gray-700">Thumbnail</label>
              <div class="mt-1 border-2 border-dashed border-gray-300 rounded-xl p-6 text-center hover:bg-gray-50 cursor-pointer transition-colors"
                id="thumbnail-dropzone">
                <input type="file" name="thumbnail" id="thumbnail-input" accept="image/*" class="hidden">
                <p class="text-sm text-gray-500">Drag & drop or click to upload</p>
              </div>
              <div id="thumbnail-preview" class="mt-2 flex flex-wrap gap-2">
                <% if (product && product.thumbnail && product.thumbnail.url) { %>
                  <div class="relative w-24 h-24">
                    <img src="<%= product.thumbnail.url %>" alt="Thumbnail"
                      class="w-full h-full object-cover rounded-lg cursor-pointer hover:opacity-90 transition-opacity"
                      data-url="<%= product.thumbnail.url %>">
                    <button type="button"
                      class="absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 text-xs delete-image"
                      data-delete-url="<%= product.thumbnail.delete_url %>">×</button>
                  </div>
                <% } %>
              </div>
            </div>
            <div>
              <label class="block text-sm font-medium text-gray-700">Preview Images</label>
              <div class="mt-1 border-2 border-dashed border-gray-300 rounded-xl p-6 text-center hover:bg-gray-50 cursor-pointer transition-colors"
                id="preview-dropzone">
                <input type="file" name="previewImages" id="preview-input" accept="image/*" multiple class="hidden">
                <p class="text-sm text-gray-500">Drag & drop or click to upload (max 10)</p>
              </div>
              <div id="preview-images" class="mt-2 flex flex-wrap gap-2">
                <% if (product && product.previewImages && product.previewImages.length > 0) { %>
                  <% product.previewImages.forEach(img => { %>
                    <div class="relative w-24 h-24">
                      <img src="<%= img.url %>" alt="Preview"
                        class="w-full h-full object-cover rounded-lg cursor-pointer hover:opacity-90 transition-opacity"
                        data-url="<%= img.url %>">
                      <button type="button"
                        class="absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 text-xs delete-image"
                        data-delete-url="<%= img.delete_url %>">×</button>
                    </div>
                  <% }) %>
                <% } %>
              </div>
            </div>
          </div>
        </div>
        <!-- Details -->
        <div class="mt-8">
          <label class="block text-sm font-medium text-gray-700">Details</label>
          <div id="details-container" class="mt-2 space-y-2">
            <% if (product && product.details) { %>
              <% product.details.forEach(detail => { %>
                <div class="flex gap-2 detail-entry">
                  <input type="text" name="details[key][]" value="<%= detail.key %>"
                    placeholder="Key"
                    class="w-1/2 p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <input type="text" name="details[value][]" value="<%= detail.value %>"
                    placeholder="Value"
                    class="w-1/2 p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                  <button type="button"
                    class="text-gray-400 hover:text-red-500 remove-detail transition-colors">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
              <% }) %>
            <% } %>
          </div>
          <button type="button" id="add-detail"
            class="mt-2 text-blue-600 hover:text-blue-700 flex items-center transition-colors">
            <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            Add Detail
          </button>
        </div>
        <!-- Reviews Management -->
        <div class="mt-8">
          <h2 class="text-lg font-semibold text-gray-700 mb-4">Manage Reviews</h2>
          <% if (product && product.reviews && product.reviews.length > 0) { %>
            <div class="space-y-4">
              <% product.reviews.forEach(review => { %>
                <div class="border p-4 rounded-lg bg-gray-50">
                  <div class="flex justify-between items-center mb-2">
                    <div>
                      <p class="text-sm font-medium text-gray-800">
                        <%= users.find(u => u.id === review.userId)?.displayName || 'Anonymous' %>
                        <span class="text-xs text-gray-500">
                          <%= new Date(review.timestamp).toLocaleDateString() %>
                          <% if (review.edited) { %>
                            (Edited)
                          <% } %>
                        </span>
                      </p>
                      <div class="flex mt-1">
                        <% for (let i = 1; i <= 5; i++) { %>
                          <svg class="w-4 h-4 <%= i <= review.rating ? 'text-yellow-400' : 'text-gray-300' %>"
                            fill="currentColor" viewBox="0 0 20 20">
                            <path
                              d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3 .921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784 .57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81 .588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        <% } %>
                      </div>
                    </div>
                    <div class="flex gap-2">
                      <button onclick="openAdminEditReview('<%= review.id %>', '<%= review.rating %>', '<%= review.comment.replace(/'/g, "\\'") %>')"
                        class="text-blue-500 hover:text-blue-600">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15.414a1 1 0 01-1.414 0l-3-3a1 1 0 011.414-1.414L9.586 13.586a2 2 0 002.828 0l4-4z" />
                        </svg>
                      </button>
                      <form action="/admin/review/delete/<%= product.id %>" method="POST" class="inline">
                        <input type="hidden" name="reviewId" value="<%= review.id %>">
                        <button type="submit" class="text-red-500 hover:text-red-600">
                          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                          </svg>
                        </button>
                      </form>
                    </div>
                  </div>
                  <p class="text-sm text-gray-600"><%= review.comment %></p>
                </div>
              <% }) %>
            </div>
          <% } else { %>
            <p class="text-gray-500">No reviews for this product yet.</p>
          <% } %>
        </div>
        <div class="mt-8 flex flex-col sm:flex-row gap-4">
          <button type="submit"
            class="bg-blue-600 text-white py-3 px-6 rounded-lg text-sm hover:bg-blue-700 flex items-center transition-colors">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <%= product ? 'Update Product' : 'Add Product' %>
          </button>
          <a href="/admin"
            class="bg-gray-200 text-gray-700 py-3 px-6 rounded-lg text-sm hover:bg-gray-300 flex items-center transition-colors">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
            Cancel
          </a>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Image Zoom Modal -->
<div id="image-modal" class="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center hidden z-50">
  <div class="relative max-w-4xl w-full">
    <img id="modal-image" src="" alt="Zoomed Image" class="w-full h-auto rounded-lg">
    <button id="close-modal" class="absolute top-2 right-2 bg-red-500 text-white rounded-full p-2 text-lg hover:bg-red-600 transition-colors">×</button>
  </div>
</div>

<!-- Admin Edit Review Modal -->
<div id="admin-edit-review-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
  <div class="bg-white rounded-xl p-6 max-w-md w-full">
    <h2 class="text-lg font-bold text-gray-800 mb-4">Edit Review</h2>
    <form action="/admin/review/edit/<%= product ? product.id : '' %>" method="POST" id="admin-edit-review-form">
      <input type="hidden" name="reviewId" id="admin-edit-review-id">
      <div class="mb-4">
        <label class="text-sm text-gray-600">Rating:</label>
        <div class="flex gap-1 mt-1">
          <% for (let i = 5; i >= 1; i--) { %>
            <input type="radio" name="rating" value="<%= i %>" id="admin-edit-rating-<%= i %>" required class="hidden" />
            <label for="admin-edit-rating-<%= i %>" class="cursor-pointer text-gray-300 hover:text-yellow-400">
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3 .921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784 .57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81 .588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            </label>
          <% } %>
        </div>
      </div>
      <div class="mb-4">
        <label for="admin-edit-comment" class="block text-sm text-gray-600">Review:</label>
        <textarea name="comment" id="admin-edit-comment" rows="4" class="w-full p-3 border rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" required></textarea>
      </div>
      <div class="flex gap-4">
        <button type="submit" class="bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors">Save Changes</button>
        <button type="button" onclick="closeAdminEditReview()" class="bg-gray-200 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors">Cancel</button>
      </div>
    </form>
  </div>
</div>

<script>
  // Add New Category
  const addCategoryBtn = document.getElementById('add-category-btn');
  const newCategoryInput = document.getElementById('new-category');
  const categorySelect = document.getElementById('category');
  const categories = <%- JSON.stringify(categories || []) %>;

  addCategoryBtn.addEventListener('click', async () => {
    const newCategory = newCategoryInput.value.trim();
    if (newCategory && !categories.includes(newCategory)) {
      try {
        const response = await fetch('/admin/category/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name: newCategory })
        });
        if (response.ok) {
          categories.push(newCategory);
          const option = document.createElement('option');
          option.value = newCategory;
          option.textContent = newCategory;
          option.selected = true;
          categorySelect.appendChild(option);
          newCategoryInput.value = '';
        } else {
          console.error('Failed to add category:', response.status);
        }
      } catch (err) {
        console.error('Error adding category:', err);
      }
    }
  });

  // Image Upload Drag-and-Drop
  const thumbnailDropzone = document.getElementById('thumbnail-dropzone');
  const thumbnailInput = document.getElementById('thumbnail-input');
  const thumbnailPreview = document.getElementById('thumbnail-preview');
  const previewDropzone = document.getElementById('preview-dropzone');
  const previewInput = document.getElementById('preview-input');
  const previewImages = document.getElementById('preview-images');

  function handleDropzone(dropzone, input, previewDiv, isMultiple) {
    dropzone.addEventListener('click', () => input.click());
    dropzone.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropzone.classList.add('border-blue-500', 'bg-blue-50');
    });
    dropzone.addEventListener('dragleave', (e) => {
      dropzone.classList.remove('border-blue-500', 'bg-blue-50');
    });
    dropzone.addEventListener('drop', (e) => {
      e.preventDefault();
      dropzone.classList.remove('border-blue-500', 'bg-blue-50');
      const files = e.dataTransfer.files;
      const dt = new DataTransfer();
      Array.from(files).forEach(file => {
        if (file.type.startsWith('image/')) dt.items.add(file);
      });
      input.files = dt.files;
      updatePreview(input, previewDiv, isMultiple);
    });
    input.addEventListener('change', () => updatePreview(input, previewDiv, isMultiple));
  }

  function updatePreview(input, previewDiv, isMultiple) {
    if (!isMultiple) previewDiv.innerHTML = '';
    const files = Array.from(input.files);
    files.forEach(file => {
      const reader = new FileReader();
      reader.onload = (e) => {
        const div = document.createElement('div');
        div.className = 'relative w-24 h-24';
        div.innerHTML = `
          <img src="${e.target.result}" alt="Preview" class="w-full h-full object-cover rounded-lg cursor-pointer hover:opacity-90 transition-opacity" data-url="${e.target.result}">
          <button type="button" class="absolute top-0 right-0 bg-red-500 text-white rounded-full p-1 text-xs temp-delete">×</button>
        `;
        previewDiv.appendChild(div);
        div.querySelector('.temp-delete').addEventListener('click', () => {
          div.remove();
          const dt = new DataTransfer();
          Array.from(input.files).forEach(f => {
            if (f !== file) dt.items.add(f);
          });
          input.files = dt.files;
        });
      };
      reader.readAsDataURL(file);
    });
  }

  handleDropzone(thumbnailDropzone, thumbnailInput, thumbnailPreview, false);
  handleDropzone(previewDropzone, previewInput, previewImages, true);

  // Image Deletion
  document.querySelectorAll('.delete-image').forEach(btn => {
    btn.addEventListener('click', async () => {
      const deleteUrl = btn.dataset.deleteUrl;
      try {
        const response = await fetch('/admin/image/delete', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ delete_url: deleteUrl })
        });
        if (response.ok) {
          btn.parentElement.remove();
          const form = document.getElementById('product-form');
          const formData = new FormData(form);
          fetch(form.action, {
            method: 'POST',
            body: formData
          });
        }
      } catch (err) {
        console.error('Error deleting image:', err);
      }
    });
  });

  // Image Zoom Modal
  const modal = document.getElementById('image-modal');
  const modalImage = document.getElementById('modal-image');
  const closeModal = document.getElementById('close-modal');

  document.addEventListener('click', (e) => {
    if (e.target.tagName === 'IMG' && e.target.dataset.url) {
      modalImage.src = e.target.dataset.url;
      modal.classList.remove('hidden');
    }
  });

  closeModal.addEventListener('click', () => {
    modal.classList.add('hidden');
    modalImage.src = '';
  });

  // Add/Remove Details
  document.getElementById('add-detail').addEventListener('click', () => {
    const container = document.getElementById('details-container');
    const div = document.createElement('div');
    div.className = 'flex gap-2 detail-entry';
    div.innerHTML = `
      <input type="text" name="details[key][]" placeholder="Key" class="w-1/2 p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
      <input type="text" name="details[value][]" placeholder="Value" class="w-1/2 p-3 bg-gray-50 border border-gray-200 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
      <button type="button" class="text-gray-400 hover:text-red-500 remove-detail transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    `;
    container.appendChild(div);
    div.querySelector('.remove-detail').addEventListener('click', () => div.remove());
  });

  document.querySelectorAll('.remove-detail').forEach(btn => {
    btn.addEventListener('click', () => btn.parentElement.remove());
  });

  // Admin Edit Review Modal
  function openAdminEditReview(reviewId, rating, comment) {
    const modal = document.getElementById('admin-edit-review-modal');
    document.getElementById('admin-edit-review-id').value = reviewId;
    document.getElementById('admin-edit-comment').value = comment;
    const ratingInput = document.getElementById(`admin-edit-rating-${rating}`);
    if (ratingInput) ratingInput.checked = true;
    document.querySelectorAll('label[for^="admin-edit-rating-"]').forEach((label, index) => {
      const star = label.querySelector('svg');
      star.classList.toggle('text-yellow-400', 5 - index <= rating);
      star.classList.toggle('text-gray-300', 5 - index > rating);
    });
    modal.classList.remove('hidden');
  }

  function closeAdminEditReview() {
    const modal = document.getElementById('admin-edit-review-modal');
    modal.classList.add('hidden');
  }

  // Dynamic star rating selection for admin edit review form
  document.querySelectorAll('input[name="rating"][id^="admin-edit-rating-"]').forEach(input => {
    input.addEventListener('change', () => {
      const rating = parseInt(input.value);
      document.querySelectorAll('label[for^="admin-edit-rating-"]').forEach((label, index) => {
        label.querySelector('svg').classList.toggle('text-yellow-400', 5 - index <= rating);
        label.querySelector('svg').classList.toggle('text-gray-300', 5 - index > rating);
      });
    });
  });
</script>

<style>
  @media (max-width: 1024px) {
    .lg\:grid-cols-2 {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 640px) {
    .text-3xl {
      font-size: 1.5rem;
    }
    .p-8 {
      padding: 1rem;
    }
    .w-1\/2 {
      width: 100%;
    }
    .detail-entry {
      flex-direction: column;
      gap: 0.5rem;
    }
    .detail-entry input {
      width: 100%;
    }
  }
</style>
<%- include('../partials/footer') %>